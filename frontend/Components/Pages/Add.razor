@page "/add-job"
@inject HttpClient Http;
@using System.ComponentModel.DataAnnotations;

<PageTitle>Add a Job App</PageTitle>

<h1>Add a Job Application</h1>

<EditForm Enhance EditContext="editContext" OnValidSubmit="@HandleSubmit" FormName="Form1">
    <DataAnnotationsValidator />
    <ValidationSummary/>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>ID</label>
            </div>
             <div class="col-md-4 p-1">
                  <InputText @bind-Value="formModel!.id"/>
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Created At</label>
            </div>
             <div class="col-md-4 p-1">
                  <InputText @bind-Value="formModel!.created_at"/>
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Title</label>
            </div>
             <div class="col-md-4 p-1">
                  <InputText @bind-Value="formModel!.title" />
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Company</label>
            </div>
             <div class="col-md-4 p-1">
                  <InputText @bind-Value="formModel!.company" />
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>URL</label>
            </div>
             <div class="col-md-4 p-1">
                  <InputText @bind-Value="formModel!.url" />
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Location</label>
            </div>
             <div class="col-md-4 p-1">
                <InputText @bind-Value="formModel!.location" />
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Status</label>
            </div>
             <div class="col-md-4 p-1">
                <InputText @bind-Value="formModel!.status" />
             </div>
        </div>
    </div>
    <div>
        <button type="submit">Submit</button>
    </div>
</EditForm>

@code {
    private EditContext? editContext;

    [SupplyParameterFromForm]
    public Job? formModel { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        formModel ??= new();
        editContext = new(formModel);
    }

    private async Task HandleSubmit()
    {
        Console.WriteLine("Submitted");

        Console.WriteLine($"Title: {formModel.title}");
        Console.WriteLine($"Company: {formModel.company}");
        Console.WriteLine($"URL: {formModel.url}");
        Console.WriteLine($"Location: {formModel.location}");
        Console.WriteLine($"Status: {formModel.status}");
        
        try
        {
            var response = await Http.PostAsJsonAsync("http://localhost:8000/api/create_job", formModel);
        
            if (response.IsSuccessStatusCode)
            {
                string responseContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Response content: {responseContent}");
                Console.WriteLine("Job application submitted successfully");
            }
            else
            {
                Console.WriteLine($"Error: {response.StatusCode} - {response.ReasonPhrase}");
                var errorContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error content: {errorContent}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception: {ex.Message}");
        }
    }

    public class Job
    {
        public string id { get; set; } = "None";
        [Required]
        public string title { get; set; } = "None";
        public string company { get; set; } = "None";
        public string url { get; set; } = "None";
        public string location { get; set; } = "None";
        public string status { get; set; } = "None";
        public string created_at { get; set; } = "None";
    }
}
