@page "/add-job"
@inject HttpClient Http
@using System.ComponentModel.DataAnnotations;
@using System.Text.RegularExpressions

<PageTitle>Add a Job App</PageTitle>

<h1>Add a Job Application</h1>

<!-- <form method="post" action="http://localhost:8000/api/create_job" OnSubmit="@HandleSubmit">
    <input id="created_at" name="created_at" value="created_at" hidden/>
    <input id="id" name="id" value="id" hidden/>

    <label for="title">Title</label>
    <input id="title" name="title" @bind-value="@newJob.title" />

    <label for="company">Company</label>
    <input id="company" name="company" @bind-value="@newJob.company" />

    <label for="url">URL</label>
    <input id="url" name="url" @bind-value="@newJob.url" />

    <label for="location">Location</label>
    <input id="location" name="location" @bind-value="@newJob.location" />

    <label for="status">Status</label>
    <input id="status" name="status" @bind-value="@newJob.status" />
    <button class="btn btn-primary" type="submit">Submit</button>
</form> -->

<EditForm Enhance EditContext="editContext" OnValidSubmit="@HandleSubmit" FormName="Form1">
    <DataAnnotationsValidator />
    <ValidationSummary/>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Title</label>
            </div>
             <div class="col-md-4 p-1">
                  <InputText @bind-Value="formModel!.title" />
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Company</label>
            </div>
             <div class="col-md-4 p-1">
                  <InputText @bind-Value="formModel!.company" />
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>URL</label>
            </div>
             <div class="col-md-4 p-1">
                  <InputText @bind-Value="formModel!.url" />
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Location</label>
            </div>
             <div class="col-md-4 p-1">
                <InputText @bind-Value="formModel!.location" />
             </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-2 p-1">
                <label>Status</label>
            </div>
             <div class="col-md-4 p-1">
                <InputText @bind-Value="formModel!.status" />
             </div>
        </div>
    </div>
    <div>
        <button type="submit">Submit</button>
    </div>
</EditForm>

@code {
    private EditContext? editContext;

    [SupplyParameterFromForm]
    public Job? formModel { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        formModel ??= new();
        editContext = new(formModel);
    }

    private async Task HandleSubmit()
    {
        Console.WriteLine("Submitted");
        Console.WriteLine(formModel.title);
        var response = await Http.PostAsJsonAsync("http://localhost:8000/api/create_job", formModel);
    
        if (response.IsSuccessStatusCode)
        {
            string responseContent = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Response content: {responseContent}");
            Console.WriteLine("Job application submitted successfully");
        }
        else
        {
            Console.WriteLine($"Error: {response.StatusCode} - {response.ReasonPhrase}");
        }
    }

    public class Job
    {
        public string id { get; set; } = "None";
        public string title { get; set; } = "None";
        public string company { get; set; } = "None";
        public string url { get; set; } = "None";
        public string location { get; set; } = "None";
        public string status { get; set; } = "None";
        public string created_at { get; set; } = "None";
    }
}
